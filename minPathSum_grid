class Solution {
public:
    int sol(vector<vector<int>>& grid,int m,int n,int i,int j,vector<vector<int>> &dp){
        if(i==m-1 && j==n-1) return grid[i][j];
        if(i>=m || j>=n) return 1e9;
        if(dp[i][j]!=-1) return dp[i][j];
        int x=0,y=0;
        x= grid[i][j]+sol(grid,m,n,i+1,j,dp);
        y= grid[i][j]+sol(grid,m,n,i,j+1,dp);
        return dp[i][j]= min(x,y);
    }
    int minPathSum(vector<vector<int>>& grid) {
        int m= grid.size();
        int n= grid[0].size();
        vector<vector<int>> dp(m,vector<int> (n,-1));
        return sol(grid,m,n,0,0,dp);
    }
};
