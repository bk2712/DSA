#include <iostream>
#include<bits/stdc++.h>

using namespace std;

void dfs(vector<vector<int>> &adj,vector<bool> &vis,int node){
    vis[node]= true;
    cout<<node<<" ";
    for(auto it: adj[node]){
        if(!vis[it]) dfs(adj,vis,it);
    }
}
int main()
{
    
    int m,n;
    cin>>m>>n;
    vector<vector<int>> edges(m,vector<int> (2));
    for(int i=0;i<n;i++){
        for(int j=0;j<2;j++) cin>>edges[i][j];
    }
    // converting to adj
    vector<vector<int>> adj(m);
    for(int i=0;i<n;i++){
        adj[edges[i][0]].push_back(edges[i][1]);
    }
    //dfs
    vector<bool> vis(m,false);
    for(int i=0;i<m;i++)
    if(!vis[i]) dfs(adj,vis,i);
    return 0;
}
