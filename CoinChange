int sol(int coins[],int n,int ind,int tar,vector<vector<int>> &dp){
	   // if(ind>=n) return 1e9;
	   //// if(tar==0) return 1;
	    if(ind==n-1){
	        if(tar%coins[ind]==0) return tar/coins[ind];
	        return 1e9;
	    }
	    if(dp[ind][tar]!=-1) return dp[ind][tar];
	    int take= 1e9;
	    if(tar>=coins[ind]) take= 1+sol(coins,n,ind,tar-coins[ind],dp);
	    int nottake= sol(coins,n,ind+1,tar,dp);
	    return dp[ind][tar]= min(take,nottake);
	}
	int minCoins(int coins[], int M, int V) 
	{ 
	    vector<vector<int>> dp(M,vector<int> (V+1,-1));
	    int a= sol(coins,M,0,V,dp);
	    if(a>=1e9) return -1;
	    return a;
	} 
