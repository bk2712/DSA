public:
  int mod= 1e9+7;
  int sol(vector<int> &nums,int ind,int tar,int n,vector<vector<int>> &dp){
      if(ind==n) return tar==0;
      int take=0;
      if(dp[ind][tar]!=-1) return dp[ind][tar];
      if(nums[ind]<=tar) take= sol(nums,ind+1,tar-nums[ind],n,dp);
      int nottake= sol(nums,ind+1,tar,n,dp);
      return dp[ind][tar]= (take+nottake)%mod;
      
  }
    int countPartitions(int n, int d, vector<int>& arr) {
        int sum=0;
        for(auto it: arr) sum+= it;
        if(sum-d<0 || (sum-d)%2!=0) return 0;
        // cout<<sum<<" ";
        int x= (sum-d)/2;
        // cout<<x<<" ";
        vector<vector<int>> dp(n,vector<int> (x+1,-1));
        return sol(arr,0,x,n,dp);
    }
