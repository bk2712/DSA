bool isCompleteTree(TreeNode* root) {
        queue<TreeNode*> q;
        vector<TreeNode* > v;
        q.push(root);
        while(q.size()){
            TreeNode* temp= q.front();
            v.push_back(temp);
            q.pop();
            if(temp->left) q.push(temp->left);
            if(temp->right) q.push(temp->right);
        }
        int n= v.size();
        for(int i=0;i<v.size();i++){
            if(v[i]->left) if(2*i+1>=n || v[2*i+1]!=v[i]->left) return false;    //agr left child exist h to uski pos v k size se kmm honi chie and (==left child )
            if(v[i]->right) if(2*i+2>=n || v[2*i+2]!=v[i]->right) return false;
        }
        return true;
    }
