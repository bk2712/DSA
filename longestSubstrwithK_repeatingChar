class Solution {
public:
    int longestSubstring(string s, int k) {
        int n= s.length();
        if(n==0 || n<k) return 0;
        if(k<=1) return n;
        unordered_map<char,int> mp;
        for(int i=0;i<s.length();i++)
            mp[s[i]]++;
        int j=0;
        while(j<n && mp[s[j]]>=k)
            j++;
        if(j>=n-1) return j;
        int len= longestSubstring(s.substr(0,j),k);
        while(j<n && mp[s[j]]<k) j++;
        int len2= (j<n)? longestSubstring(s.substr(j),k): 0;
        return max(len,len2);
    }
};
